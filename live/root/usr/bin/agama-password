#!/usr/bin/sh

# Helper script wich sets the root (Agama) pasword from several sources
# - Kernel boot command line (use --kernel option)
# - Systemd ask password tool (use --systemd option)
# - Interactively using a dialog (use --dialog option)

MYDIR=$(realpath "$(dirname "$0")")
export DIALOGRC="$MYDIR/../share/agama/misc/dialog.conf"

# dialog titles
BTITLE="Agama Configuration (Press Ctrl+L to refresh the screen)"
TITLE="Set Login Password"

# functions for entering the password in an interactive dialog
confirm_exit() {
  if dialog --backtitle "$BTITLE" --defaultno --yesno "Are you sure you want to cancel?" 5 40; then
    exit 1
  fi
}

msg_box() {
  dialog --backtitle "$BTITLE" --msgbox "$1" 6 30
}

ask_password() {
  if ! PWD1=$(dialog --title "$TITLE" --backtitle "$BTITLE" --stdout --insecure --passwordbox "Password:" 8 40); then
    confirm_exit
    ask_password
  fi

  if ! PWD2=$(dialog --title "$TITLE" --backtitle "$BTITLE" --stdout --insecure --passwordbox "Verify Password:" 8 40); then
    confirm_exit
    ask_password
  fi
  
  if [ "$PWD1" != "$PWD2" ]; then
    msg_box "Passwords do not match.\nPlease try again."
    ask_password
  elif [ -z "$PWD1" ]; then
    msg_box "Password cannot be empty.\nPlease try again."
    ask_password
  else
    echo "$PWD1" | passwd --stdin
    exit 0
  fi
}

# functions for entering the password using the "systemd-ask-password" tool
ask_password_systemd() {
  if ! PWD1=$(systemd-ask-password --timeout=0 "Set login password: "); then
    exit 1
  fi

  if ! PWD2=$(systemd-ask-password --timeout=0 "Verify password: "); then
    exit 1
  fi

  if [ "$PWD1" != "$PWD2" ]; then
    echo "Passwords do not match, please try again."
    ask_password_systemd
  elif [ -z "$PWD1" ]; then
    echo "Password cannot be empty, please try again. To skip the password configuration press Ctrl+C."
    ask_password_systemd
  else
    echo "$PWD1" | passwd --stdin
    exit 0
  fi
}

if [ "$1" = "--kernel" ]; then
  # get the password from the kernel command line
  PWD=$(awk -F 'agama.password=' '{sub(/ .*$/, "", $2); print $2}' < /proc/cmdline)
  if [ -n "$PWD" ]; then
    echo "$PWD" | passwd --stdin
  fi

  PWD=$(awk -F 'agama.password_hash=' '{sub(/ .*$/, "", $2); print $2}' < /proc/cmdline)
  if [ -n "$PWD" ]; then
    usermod -p "$PWD" root
  fi
elif [ "$1" = "--dialog" ]; then
  ask_password
elif [ "$1" = "--systemd" ]; then
  ask_password_systemd
fi
